name: Deploy to Production

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  NODE_VERSION: '18'

jobs:
  # 代码质量检查
  quality-check:
    runs-on: ubuntu-latest
    name: Code Quality Check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npm run type-check

      - name: Run ESLint
        run: npm run lint

      - name: Run tests
        run: npm run test

  # 构建应用
  build:
    runs-on: ubuntu-latest
    name: Build Application
    needs: quality-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            public/
            package.json
            package-lock.json
          retention-days: 1

  # 部署到生产环境
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Production
    needs: [quality-check, build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

      # 或者部署到其他平台
      # - name: Deploy to Custom Server
      #   run: |
      #     # 添加自定义部署脚本
      #     echo "Deploying to custom server..."

  # 健康检查
  health-check:
    runs-on: ubuntu-latest
    name: Health Check
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Wait for deployment
        run: sleep 30

      - name: Check application health
        run: |
          curl -f ${{ secrets.PRODUCTION_URL }}/api/health || exit 1
          echo "Health check passed!"

      - name: Notify deployment success
        if: success()
        run: |
          echo "🎉 Deployment successful!"
          # 这里可以添加通知逻辑，如发送到 Slack、Discord 等

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "❌ Deployment failed!"
          # 这里可以添加失败通知逻辑
